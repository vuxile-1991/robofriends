{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vukasin\\\\Documents\\\\Redux_project\\\\robofriends\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport { robots } from '../robots';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: robots\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 2\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }\n    }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Vukasin/Documents/Redux_project/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","robots","Scroll","setSearchField","mapStateToProps","state","searchField","searchRobots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAQ,WAAR;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENL,IAAAA,MAAM,EAAEI,KAAK,CAACG,aAAN,CAAoBP,MAFtB;AAGNQ,IAAAA,SAAS,EAAEJ,KAAK,CAACG,aAAN,CAAoBC,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACG,aAAN,CAAoBE;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAQ;AACRC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD3B,GAAR;AAGD,CAJD;;AAMA,MAAMC,GAAN,SAAkBpB,SAAlB,CAA4B;AAC3BqB,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKb,KAAL,GAAa;AACZJ,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA;;AAEDkB,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAExB,MAAAA,MAAM,EAAEA;AAAV,KAAd,CAFf;AAGA;;AAEDyB,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEzB,MAAAA;AAAF,QAAa,KAAKI,KAAxB;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeO,MAAAA;AAAf,QAAkC,KAAKc,KAA7C;AACA,UAAMC,cAAc,GAAG3B,MAAM,CAAC4B,MAAP,CAAcC,KAAK,IAAG;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC3B,WAAW,CAAC0B,WAAZ,EAAlC,CAAP;AACD,KAFuB,CAAvB;AAGC,WAAO,CAAC/B,MAAM,CAACiC,MAAR,gBACT;AAAI,MAAA,SAAS,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADS,gBAGR;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEA,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAGrB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAHA,CAHC;AAWF;;AA/B2B;;AAiC5B,eAAe9B,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { robots } from '../robots';\r\nimport Scroll from '../components/Scroll'\r\nimport  './App.css';\r\n\r\nimport { setSearchField } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\t\treturn  {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots: robots }));\r\n\t}\r\n\r\n\trender (){\r\n\t\tconst { robots } = this.state;\r\n\t\tconst { searchField, onSearchChange } = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t})\r\n\t\t\treturn !robots.length ?\r\n\t<h1 className= 'tc'>Loading</h1> :\r\n\t(\r\n\t\t<div className= 'tc'>\r\n\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t<SearchBox searchChange ={onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t<CardList robots={filteredRobots} />\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}